5
Forth fOn
'tx10 var 'tx11 var 'tx12 var 'tx13 var 'tx2 var 'tx3 var 'tx4 var
tx10 ( a b | c ) { c a @ b @ + = c @ p } = 
tx11 ( a b | c ) { c a @ b @ + = c @ dup p push } = 
tx12 ( a b | c ) { c a @ b @ + = c @ dup p push } = 
tx13 ( a b | c ) { c a @ b @ + = c @ dup p push } = // 'push' can't push an value intermediate in the block only last value
//tx13 ( a b | c ) { c a @ b @ + = c @ dup d: push 4 + p } = 
//tx2 { + dup p 4 + dup p return tos } =
tx2 { + dup p 4 + dup p } =
tx3 { + dup p 4 + dup p push } = 
//tx4 { + dup d: push p 4 + p } = // 'push' can't push an value intermediate in the block only last value
: txtest 1 2 tx10 @ _run ; txtest 
: txtest2 tx11 @ _run ; 1 2 txtest2 4 + dup p 7 _assert
"\nline above should show 3 3 7" ps //pause
: txtest20 tx12 @ _run ; nl 1 2 txtest20 4 + dup p 7 _assert
"\nline above should show 3 7" ps //pause
: txtest21 tx13 @ _run ; nl 1 2 txtest21 4 + dup p 7 _assert
"\nline above should show 3 7" ps //pause
: txtest3 1 2 tx2 @ _run ; nl txtest3 7 _assert
"\nline above should show 3 7" ps //pause
: txtest4 1 2 tx3 @ _run ; nl txtest4 7 _assert
"\nline above should show 3 7" ps //pause
: txtest5 tx2 @ _run ; nl 1 2 txtest5 7 _assert
"\nline above should show 3 7" ps //pause
//: txtest6 1 2 tx4 @ _run ; nl txtest6 3 _assert // 'push' can't push an value intermediate in the block only last value
//"\nline above should show 3 3" ps pause
C
sp0
User 
cOn
// problem with local variables in yada (below) finding this 'b' and 'c'
void yada () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; } pwi yada yada () ; 7 s _assert s
void yadaYada () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; } pwi yadaYada yadaYada () ; 7 _assert s
sp0
cOff
infixOn 
Root
: _assert1 _assert s ;
: hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x ; // x p : infix mode 
' hi find wdiss
hi 14 _assert1 //pause
sp0
dscOn
: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ; 
' hi1 find wdiss
6 3 hi1 dup p 48 _assert //pause
: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ; 
' hi1 find wdiss
6 3 hi1 dup p 48 _assert //pause

10 5 hi1 dup p 48 _assert1
: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; 
' hi2 find wdiss
6 3 hi2 dup p 48 _assert1
sp0
10 5 hi2 dup p 48 _assert1
: h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ; 
' h3 find wdiss
6 3 h3 dup p 12 "6 3 h3_assert1" assert
10 5 h3 dup p 12 _assert1
: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ; 
' h4 find wdiss
6 3 h4 dup p 6 _assert1
10 5 h4 dup p 6 _assert1
"\nabove lines should read 6" ps //pause
sp0
3 ( x ) { stack x dup p 3 _assert0 } ix 
"\nabove line should read 3" ps //pause
sp0 
nl
#if 1
bnOn cOn 
void ctof ( c ) { c = c * 1.8 ; c = c + 32 ; nl ; p (c) ; } ctof ( 11.41) ;
void ctof1 ( c ) { c *= 1.8 ; c += 32 ; nl ; p (c) ; } ctof1 ( 11.41) ;
cOff : ctof2 ( c ) c 1.8 *=  c 32 += nl c @ p ; 11.41 ctof2 
bnOff
sp0
"\nabove lines should show : 52.53799999999999670308170607313514" ps
#endif
//pause
// problems still in this area??
: Error "\nerror :" ps location pause ;
c_syntaxOn
void thi42 ( n ) { n == 1 ? "hi1" ps : n == 2 ? "hi2" ps : n == 3 ? "hi3" ps : n == 4 ? "hi42" ps : "err" ps Error ; } 
c_syntaxOff
C_Syntax
'thi42 find wdiss //pause
nl
1 thi42 sp0
2 thi42 sp0
3 thi42 sp0
4 thi42 
"\nshould show : hi1 hi2 hi3 hi42 " ps //pause
sp0 
Interpreter
0 ? "hi" ps : 0 ? "hi2" ps : 0 ? "hi3" ps : 1 ? "hi42\n" ps : Error sp0
: thi2 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : "err" ps ; 
'thi2 find wdiss
2 thi2 sp0 //pause
: thi3 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : n @ 3 == ? "hi3" ps : Error ; 
'thi3 find wdiss
3 thi3 
sp0
: thi43 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : n @ 3 == ? "hi3" ps : n @ 4 == ? "hi42" ps : Error ; 
'thi43 find wdiss
4 thi43
nl
sp0
1 ? "hi1" ps 
1 ? "hi2" ps : Error 
sp0
0 ? Error : "hi3" ps 
sp0
{ 0 ? Error : "hi42" ps } ix 
nl
sp0
3 4 ( n m ) { oPrintf ( "n = %d : m = %d", n, m ) return ( n @ m @ + ) } ix dup p 7 _assert sp0 
sp0
0 ? "hi1" ps : 0 ? "hi2" ps : 0 ? "hi3" ps : 1 ? "hi42\n" ps : Error 
sp0
c_syntaxOn
void thi41 () { 0 ? "hi1" Error : 0 ? "hi2" Error : 0 ? "hi3" Error : 1 ? "hi42\n" ps : Error ; } 
sp0
c_syntaxOff
C_Syntax
'thi41 find wdiss
thi41 
"\nshould show : 'hi42' " ps
//pause
sp0 
c_syntaxOn
void thi42 ( n ) { n == 1 ? "1:hi1" ps : n == 2 ? "2:hi2" ps : n == 3 ? "3:hi3" ps : n == 4 ? "4:hi42" ps : Error ; } 
C_Syntax
'thi42 find wdiss
sp0
thi42 ( 4 ) 
"\nshould show : '4:hi42' " ps //pause
c_syntaxOff
sp0
0 ? "er" Error : "ok" ps    
1 ? "ok" ps : Error   
//pause
infixOff 
3 4 ( n m ) { oPrintf ( "\nn = %d : m = %d", n, m ) return ( n @ m @ + ) } ix dup p 7 _assert
sp0
: hi ( n ) 1 2 + infixOn + n @ + 3 infixOff n store return n @ ; 3 hi 9 _assert
: hip ( n ) 1 2 + {| infixOn |} + n @ + 3 infixOff n store return n @ ; 3 hip 9 _assert
cOff
Combinators
'ok var ok 1 = { ok @ 1 == } { "\nok" ps } if 
{ ok @ 1 == } { "\rok" ps } { "\nerror" ps } if3 sp0
2 + 7 assertStkChk // stack checking
sp0
//pause